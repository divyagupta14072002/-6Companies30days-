class Solution {
public:
    vector<int> largestDivisibleSubset(vector<int>& nums) {
        vector<int>ans;
        int n=nums.size(),maxi=0;
        sort(nums.begin(),nums.end());
        vector<int>dp(n,1);
        vector<int>prev(n,-1);
        for(int i=0;i<n;i++){
            for(int j=0;j<i;j++){
                if(nums[i]%nums[j]==0 && dp[i]<dp[j]+1){
                    dp[i]=dp[j]+1;
                    prev[i]=j;
                }
                if(dp[i]>dp[maxi]) maxi=i;
            }
        }
        while(maxi>=0){
            ans.push_back(nums[maxi]);
            maxi=prev[maxi];
        }
        return ans;
    }
};
