class comp{
    public:
    int operator()(pair<int,string>&p1,pair<int,string>&p2){
        if(p1.first==p2.first) return p2.second<p1.second;
        else return p2.first>p1.first;
    }
};
class Solution {
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        unordered_map<string,int>mp;
        for(int i=0;i<words.size();i++) mp[words[i]]++;
        priority_queue<pair<int,string>,vector<pair<int,string>>,comp>pq;
        for(auto it:mp) pq.push({it.second,it.first});
        vector<string>ans;
        while(k--){
            ans.push_back(pq.top().second);
            pq.pop();
        }
        return ans;
    }
};
