class Solution {
public:
    int solve(int ind,vector<int>&price,vector<vector<int>>&special,vector<int>&needs){
        int n=needs.size();
        if(ind<0){
            int ans=0;
            for(int i=0;i<n;i++) ans+=needs[i]*price[i];
            return ans;
        }
        bool flag=true;
        for(int i=0;i<n;i++){
            if(needs[i]<special[ind][i]){
                flag=false;
                break;
            }
        }
        if(flag==false) return solve(ind-1,price,special,needs);
        else{
            int op1=solve(ind-1,price,special,needs);
            int op2=0;
            for(int i=0;i<n;i++) needs[i]=needs[i]-special[ind][i];
            op2=special[ind][n]+solve(ind,price,special,needs);
            for(int i=0;i<n;i++) needs[i]=needs[i]+special[ind][i];
            return min(op1,op2);
        }
    }
    int shoppingOffers(vector<int>& price, vector<vector<int>>& special, vector<int>& needs) {
        int ind=special.size()-1;
        return solve(ind,price,special,needs);
    }
};
