class Solution {
public:
    void dfs(int row,int col,int &cnt,int m,int n,int di[],int dj[],vector<vector<int>>&grid){
        grid[row][col]=0;
        cnt++;
        for(int i=0;i<4;i++){
            int nr=row+di[i];
            int nc=col+dj[i];
            if(nr>=0 && nr<m && nc>=0 && nc<n && grid[nr][nc]==1){
                dfs(nr,nc,cnt,m,n,di,dj,grid);
            }
        }
    }
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int m=grid.size(),n=grid[0].size();
        int maxi=0;
        int di[]={-1,0,1,0};
        int dj[]={0,1,0,-1};
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1){
                    int cnt=0;
                    dfs(i,j,cnt,m,n,di,dj,grid);
                    maxi=max(maxi,cnt);
                }
            }
        }
        return maxi;
    }
};
