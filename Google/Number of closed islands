class Solution {
public:
    bool dfs(int i,int j,int n,int m,vector<vector<int>>&grid){
        if(i<0 || i>=n || j<0 || j>=m) return false;
        if(grid[i][j]==1) return true;
        grid[i][j]=1;
        bool ans1,ans2,ans3,ans4;
        ans1=dfs(i-1,j,n,m,grid);
        ans2=dfs(i+1,j,n,m,grid);
        ans3=dfs(i,j-1,n,m,grid);
        ans4=dfs(i,j+1,n,m,grid);
        return ans1&&ans2&&ans3&&ans4;
    }
    int closedIsland(vector<vector<int>>& grid) {
        int n=grid.size(),m=grid[0].size();
        int cnt=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==0){
                    if(dfs(i,j,n,m,grid)) cnt++;
                }
            }
        }
        return cnt;
    }
};
